// Pinos dos componentes
const int ldrPin = 27;          // Pino do LDR
const int thermistorPin = 2;    // Pino do termistor
const int buzzerPin = 26;       // Pino do buzzer
const int painelSolarPin = 33;  // Pino de entrada do painel solar

// Valores de configuração
const float temperaturaAlvo = 30.0; // Temperatura alvo em graus Celsius

void setup() {
  // Inicialização do Serial Monitor
  Serial.begin(115200);

  // Configuração dos pinos
  pinMode(buzzerPin, OUTPUT);
}

void loop() {
  // Leitura dos sensores
  int ldrValue = analogRead(ldrPin);
  int thermistorValue = analogRead(thermistorPin);
  int painelSolarValue = analogRead(painelSolarPin);

  // Cálculo da voltagem do painel solar
  float solarVoltage = (float)painelSolarValue / 4095.0 * 3.3;

  // Cálculo da temperatura em graus Celsius
  float resistance = 10000.0 / ((4095.0 / thermistorValue) - 1);
  float temperature = log(resistance / 10000.0) / 3950.0;
  temperature = 1.0 / (temperature + 273.15);
  temperature = temperature - 273.15;

  // Exibição dos resultados
  Serial.print("Nível de incidência solar: ");
  Serial.print(ldrValue);
  Serial.println(" lux");

  Serial.print("Voltagem do painel solar: ");
  Serial.print(solarVoltage);
  Serial.println(" V");

  Serial.print("Temperatura: ");
  Serial.print(temperature);
  Serial.println(" °C");

  // Verificação da temperatura alvo
  if (temperature >= temperaturaAlvo) {
    digitalWrite(buzzerPin, HIGH); // Ativa o buzzer
    Serial.println("Temperatura alvo atingida! Alarme ativado!");
  } else {
    digitalWrite(buzzerPin, LOW); // Desativa o buzzer
  }

  delay(1000);
}
